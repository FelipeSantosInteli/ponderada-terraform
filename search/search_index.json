{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Instala\u00e7\u00e3o","text":"Instalando Terraform  <p>Essa processo de instala\u00e7\u00e3o \u00e9 descrito para ambiente Linux (Ubuntu/Debian). Mais op\u00e7\u00f5es de instala\u00e7\u00e3o podem ser encontradas na documenta\u00e7\u00e3o oficial do Terraform</p> <p>     Certifique-se de que seu sistema est\u00e1 atualizado e que voc\u00ea instalou os pacotes gnupg, software-properties-common e curl. Voc\u00ea usar\u00e1 esses pacotes para verificar a assinatura GPG da HashiCorp e instalar o reposit\u00f3rio de pacotes Debian da HashiCorp. </p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get install -y gnupg software-properties-common\n</code></pre> <p>     \u00c0 partir disso, \u00e9 necess\u00e1rio instalar a Chave GPG do HarshCorp por meio do seguinte comando: </p> <pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | \\\ngpg --dearmor | \\\nsudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg &gt; /dev/null\n</code></pre> <p>     Caso queira verificar a impress\u00e3o digital da chave, apenas execute: </p> <pre><code>gpg --no-default-keyring \\\n--keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \\\n--fingerprint\n\n</code></pre> <p>     O retorno esperado: </p> <pre><code>/usr/share/keyrings/hashicorp-archive-keyring.gpg\n-------------------------------------------------\npub   rsa4096 XXXX-XX-XX [SC]\nAAAA AAAA AAAA AAAA\nuid           [ unknown] HashiCorp Security (HashiCorp Package Signing) &lt;security+packaging@hashicorp.com&gt;\nsub   rsa4096 XXXX-XX-XX [E]\n</code></pre> <p>     Adicione o reposit\u00f3rio oficial da HashiCorp ao seu sistema. O comando lsb_release -cs encontra o codinome da vers\u00e3o de distribui\u00e7\u00e3o para o seu sistema atual, como buster, groovy ou sid. </p> <pre><code>echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \\\nhttps://apt.releases.hashicorp.com $(lsb_release -cs) main\" | \\\nsudo tee /etc/apt/sources.list.d/hashicorp.list\n</code></pre> <p>     Por fim instale o Terraform executando: </p> <pre><code>sudo apt update &amp;&amp; sudo apt-get install terraform\n</code></pre>  Instalando AWS CLI  <p>Essa processo de instala\u00e7\u00e3o \u00e9 descrito para ambiente Linux x86 (64-bit). Mais op\u00e7\u00f5es de instala\u00e7\u00e3o podem ser encontradas na documenta\u00e7\u00e3o oficial da AWS</p> <p>     Para intalar o CLI da AWS, basta executar o simples comando: </p> <pre><code>curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install\n</code></pre> <p>     Caso seja necess\u00e1rio atualizar sua instala\u00e7\u00e3o atual da AWS CLI, adicione seu symlink existente e as informa\u00e7\u00f5es do instalador para gerar o comando de instala\u00e7\u00e3o usando os par\u00e2metros --bin-dir, --install-dir e --update. O comando a seguir usa um exemplo de symlink em /usr/local/bin e um exemplo de localiza\u00e7\u00e3o do instalador em /usr/local/aws-cli. </p> <pre><code>curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update\n</code></pre>  Credenciais AWS  <p>     Para que seja poss\u00edvel utilizar o AWS CLI, \u00e9 necessa\u0155io fazer a configura\u00e7\u00e3o das credenciais de acesso ao console da AWS. Executando o comando: aws configure </p> <p>     Ser\u00e1 necess\u00e1rio confirmar sua AWS Access Key ID, AWS Secret Access Key, regi\u00e3o padr\u00e3o e formato de sa\u00edda (esse podendo ser default). </p> <p>     Em seguida, configure o AWS Access Token diretamente no arquivo de credenciais, esse que por sua vez pode ser encontrado dentro da pasta (oculta) ` .aws ` que geralente se localiza na pasta pessoal. Procure por um arquivo chamado ` credentials ` (caso n\u00e3o exista, apenas crie um arquivo com esse mesmo nome e o modifique). Ser\u00e1 necess\u00e1rio salvar suas credenciais nesse arquivo, tal como \u00e0 seguir: </p> <pre><code>[default]\naws_access_key_id = YOUR_ACCESS_KEY_ID\naws_secret_access_key = YOUR_SECRET_ACCESS_KEY\naws_session_token = YOUR_SESSION_TOKEN\n</code></pre> <p>Vale ressaltar que YOUR_ACCESS_KEY_ID, YOUR_SECRET_ACCESS_KEY e YOUR_SESSION_TOKEN devem ser substituidos por suas pr\u00f3prias credenciais que podem ser encontradas acessando seu console AWS.</p>"},{"location":"exe/","title":"Execu\u00e7\u00e3o","text":"Terraform para criar uma inst\u00e2ncia EC2 <p> Primeiramente, ser\u00e1 necess\u00e1rio criar um arquivo de configura\u00e7\u00e3o Terraform chamado main.tf no diret\u00f3rio do seu projeto com o seguinte conte\u00fado:</p> <pre><code>provider \"aws\" {\n  region = \"us-east-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0c02fb55956c7d316\"  # Amazon Linux 2 AMI (HVM), SSD Volume Type\n  instance_type = \"t2.micro\"\n\n  tags = {\n    Name = \"TerraformExample\"\n  }\n}\n</code></pre> <p>     Para execut\u00e1-lo apenas utilize o comando ` terraform init ` onde esse arquivo se encontra. J\u00e1 para conferir o que ser\u00e1 criado, execute ` terraform plan `. </p> <p>     Caso esteja tudo certo, basta utilizar o comando ` terraform apply ` e digitar \"yes\" quando for pedido para criar sua inst\u00e2ncia. </p> <p></p> <p></p>  Deletando inst\u00e2ncias  <p>     Para deletar inst\u00e2ncias criadas por meio do Terraform caso seja necess\u00e1rio, basta executar ` terraform destroy ` digite \"yes\" quando for pedido uma confirma\u00e7\u00e3o </p> <p></p> <p></p>"}]}